@startuml Program.Main

title Program.Main
participant "Main(string[] args)" as Main_p0 #LightYellow
participant "Console.WriteLine(a0)" as Console.WriteLine_a0 #LightGreen
participant "ReadBigInteger(a0)" as ReadBigInteger_a0 #LightGreen
participant "AddBigInteger(a0, a1)" as AddBigInteger_a0_a1 #LightGreen
participant "Console.WriteLine()" as Console.WriteLine #LightGreen
participant "Console.ReadLine()" as Console.ReadLine #LightGreen
autonumber
Main_p0 -> Console.WriteLine_a0 : ("Addieren von sehr groÃŸen Zahlen (Integer)")
Main_p0 -> Console.WriteLine_a0 : ("=========================================")
Main_p0 -> ReadBigInteger_a0 : ("Geben Sie die erste Zahl ein: ")
ReadBigInteger_a0 --> Main_p0 : number1
Main_p0 -> ReadBigInteger_a0 : ("Geben Sie die zweite Zahl ein:")
ReadBigInteger_a0 --> Main_p0 : number2
Main_p0 -> AddBigInteger_a0_a1 : (number1 ,number2)
AddBigInteger_a0_a1 --> Main_p0 : result
Main_p0 -> Console.WriteLine_a0 : ("Summer der beiden Zahlen:")
Main_p0 -> Console.WriteLine_a0 : ($"{result}")
Main_p0 -> Console.WriteLine
Main_p0 -> Console.WriteLine_a0 : ("Beenden mit Eingabetaste... ")
Main_p0 -> Console.ReadLine
@enduml

@startuml ReadBigInteger
participant "AddBigInteger(string number1,string number2)" as AddBigInteger_p0_p1 #LightYellow
participant "Math.Max(a0, a1)" as Math.Max_a0_a1 #LightGreen
participant "AddLeadingCharacters(a0, a1, a2)" as AddLeadingCharacters_a0_a1_a2 #LightGreen
autonumber
AddBigInteger_p0_p1 -> Math.Max_a0_a1 : (number1.Length ,number2.Length)
Math.Max_a0_a1 --> AddBigInteger_p0_p1 : result
AddBigInteger_p0_p1 -> AddLeadingCharacters_a0_a1_a2 : (number1 ,'0' ,maxNumber - number1.Length)
AddLeadingCharacters_a0_a1_a2 --> AddBigInteger_p0_p1 : number1
AddBigInteger_p0_p1 -> AddLeadingCharacters_a0_a1_a2 : (number2 ,'0' ,maxNumber - number2.Length)
AddLeadingCharacters_a0_a1_a2 --> AddBigInteger_p0_p1 : number2

@enduml

