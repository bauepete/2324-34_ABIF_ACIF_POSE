@startuml Program.Main
header
generated on 3/9/2024 8:21:55â€¯PM
end header
title Program.Main
start
#LightBlue:int TEST_SIZE = 20
int PERFORMANCE_SIZE = 50_000
int[] array;
:PrintLine("Sort-Algorithmen!");
:PrintLine("=================");
:PrintLine();
:PrintLine("Test BruteForceSort");
:array = CreateRandomArray(TEST_SIZE);
:PrintArray("Unsorted:", array);
:Sort.BruteForceSort(array);
:PrintArray("BruteForceSort:", array);
:PrintLine();
:PrintLine("Test BubbleSort");
:array = CreateRandomArray(TEST_SIZE);
:PrintArray("Unsorted:", array);
:Sort.BubbleSort(array);
:PrintArray("BubbleSort:", array);
:PrintLine();
:PrintLine("Test InsertionSort");
:array = CreateRandomArray(TEST_SIZE);
:PrintArray("Unsorted:", array);
:Sort.InsertionSort(array);
:PrintArray("InsertionSort:", array);
:PrintLine();
:PrintLine("Test SelectionSort");
:array = CreateRandomArray(TEST_SIZE);
:PrintArray("Unsorted:", array);
:Sort.SelectionSort(array);
:PrintArray("SelectionSort:", array);
:PrintLine();
:PrintLine("Performance Testing");
:PrintLine("===================");
:PrintLine();
:PrintLine("Machine:   " + Environment.MachineName);
:PrintLine("Version:   " + Environment.Version);
:PrintLine("Processor: Apple M2");
:PrintLine("Processor: " + Environment.ProcessorCount + " cores");
:PrintLine("OS:        " + Environment.OSVersion);
:PrintLine();
#LightBlue:Stopwatch sw = new Stopwatch()
int[] randomArray = CreateRandomArray(PERFORMANCE_SIZE)
int[] arrayToSort;
:arrayToSort = (int[])randomArray.Clone();
:PrintLine($"{nameof(Sort.BruteForceSort)}(0...{randomArray.Length})");
:sw.Start();
:Sort.BruteForceSort(arrayToSort);
:sw.Stop();
:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
:PrintLine();
:arrayToSort = (int[])randomArray.Clone();
:PrintLine($"{nameof(Sort.BubbleSort)}(0...{randomArray.Length})");
:sw.Restart();
:Sort.BubbleSort(arrayToSort);
:sw.Stop();
:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
:PrintLine();
:arrayToSort = (int[])randomArray.Clone();
:PrintLine($"{nameof(Sort.InsertionSort)}(0...{randomArray.Length})");
:sw.Restart();
:Sort.InsertionSort(arrayToSort);
:sw.Stop();
:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
:PrintLine();
:arrayToSort = (int[])randomArray.Clone();
:PrintLine($"{nameof(Sort.SelectionSort)}(0...{randomArray.Length})");
:sw.Restart();
:Sort.SelectionSort(arrayToSort);
:sw.Stop();
:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
:PrintLine();
:arrayToSort = (int[])randomArray.Clone();
:PrintLine($"Array.Sort(0...{randomArray.Length})");
:sw.Restart();
:Array.Sort(arrayToSort);
:sw.Stop();
:PrintLine($"Zeitmessung: {sw.ElapsedMilliseconds} ms");
:PrintLine();
:PrintLine("Exit with ENTER...");
:ReadLine();
footer
generated with the DiagramCreator by Prof.Gehrer
end footer
stop
@enduml
